<script>

  window.onload = ()=>{

    showShortFilter();
  }

  const showShortFilter = ()=>{
        const filter = "{{inputFilter}}"
    let shortFilter = ""

    switch(filter){
      case "Madrid":
      shortFilter = "MAD"
      break;

      case "Barcelona":
      shortFilter = "BCN"
      break;
      
      case "Miami":
      shortFilter = "MIA"
      break; 
      
      case "Berlin":
      shortFilter = "BER"
      break; 
    
      case "Paris":
      shortFilter = "PAR"
      break; 
      
      case "Amsterdam":
      shortFilter = "AMS"
      break;

      default:
      shortFilter = "ALL"
    }

   document.querySelector(".filter-btn").innerHTML = `<span id="filter-span">${shortFilter}</span><i class="fa fa-caret-down"></i>`
  }

  const filterShow = ()=>{
    
    const filterForm = document.querySelector(".filter-form")
    const filterBtn = document.querySelector(".filter-btn")

    if(filterForm.classList.contains("hidden"))
      filterBtn.innerHTML = `<i class="fa fa-caret-up"></i>`
    else
      showShortFilter();

    filterForm.classList.toggle("hidden")
  }

  const dislike = () => {

    const userId = "{{user._id}}"
    const activeCard = document.querySelector(".active-card");
    const activeUserId = activeCard.id;
    
    const randomArray = {{{ json shuffledArray }}}
    const randomIdArray = randomArray.map(user => user._id)
  
    const activeUserIndex = randomIdArray.indexOf(activeUserId)
   const nextUserId = randomIdArray[activeUserIndex + 1]
    const nextCard = document.getElementById(nextUserId)

   axios.post(`/swipe/dislike/${userId}/${activeUserId}`)
    .then(() => {

      nextCard.classList.toggle("active-card")
      activeCard.classList.toggle("active-card")
      activeCard.classList.toggle("slide-card-left")

      setTimeout(()=>{
      nextCard.classList.toggle("hidden")
      activeCard.classList.toggle("hidden")
      },1000)

    })
  }

  const like = () => {

    const user = {{{ json user }}}
    const userId = "{{user._id}}"
    const activeCard = document.querySelector(".active-card");
    const activeUserId = activeCard.id;
    
    const randomArray = {{{ json shuffledArray }}}

    const randomIdArray = randomArray.map(user => user._id)
    const activeUserIndex = randomIdArray.indexOf(activeUserId)

    const nextUserId = randomIdArray[activeUserIndex + 1]
    const nextCard = document.getElementById(nextUserId)


        axios.post(`/swipe/like/${userId}/${activeUserId}`)
        .then((result) => {
          console.log(result.data)

          if(result.data.matched){
            console.log("START ANIMATION")
            document.querySelector(".match-popup").classList.toggle("hidden")
            setTimeout(()=>{

            document.querySelector(".match-img").classList.toggle("hidden")
            },1000)

            setTimeout(()=>{
              nextCard.classList.toggle("active-card")
              activeCard.classList.toggle("active-card")

              activeCard.classList.toggle("slide-card-right")

              setTimeout(()=>{
              nextCard.classList.toggle("hidden")
              activeCard.classList.toggle("hidden")
              document.querySelector(".match-popup").classList.toggle("hidden")
              document.querySelector(".match-img").classList.toggle("hidden")
              },1000)
            },2000)



          
          }
          else{
          nextCard.classList.toggle("active-card")
          activeCard.classList.toggle("active-card")

          activeCard.classList.toggle("slide-card-right")
          
          setTimeout(()=>{
          nextCard.classList.toggle("hidden")
          activeCard.classList.toggle("hidden")
          },1000)
          
          }
        })
  }

  const clickedYes = () => {
    document.querySelector(".yes-btn").classList.toggle("clicked-yes")
  }

  const clickedNo = () => {
    document.querySelector(".no-btn").classList.toggle("clicked-no")
  }
</script>






<div class="swipe-container">

  <section class="card outter-card">

    <div id="{{firstRandom._id}}" class="card inner-card active-card">

      <a href="/profile/{{firstRandom._id}}" class="img-link">
        <img src="{{firstRandom.profileImg}}" alt="" class="card-img-top">
        <div class="card-img-overlay">
          <h2 class="name-age">{{firstRandom.username}}, {{firstRandom.age}}</h2>
          <h5 class="campus">{{firstRandom.campus}}</h5>
        </div>
      </a>
    </div>

    {{#each shuffledArray}}
    <div id="{{_id}}" class="card inner-card hidden">

      <a href="/profile/{{_id}}" class="img-link">
        <img src="{{profileImg}}" alt="" class="card-img-top">
        <div class="card-img-overlay">
          <h2 class="name-age">{{username}}, {{age}}</h2>
          <h5 class="campus">{{campus}}</h5>
        </div>
      </a>
    </div>
    {{/each}}


    <div class="match-popup animated-overlay hidden">
      <img src="/images/itsamatch.png" alt="it's a match" class="match-img animated-match-img hidden">
    </div>

    <div class="inline-buttons card-footer">
      <!--form action="/swipe/dislike/{{user._id}}/{{shuffledArray.[0]._id}}" method="POST"-->
      <button type="submit" class="btn no-btn" onclick="dislike()"><i class="fa fa-times"
          style="font-size:30px"></i></button>
      <!--/form-->
      <button type="button" class="btn filter-btn" onclick="filterShow()" style="font-size: 14px;"><span id="filter-span"></span><i class="fa fa-caret-down"></i></button>

      <!--form action="/swipe/like/{{user._id}}/{{shuffledArray.[0]._id}}" method="POST"-->
      <button type="submit" class="btn yes-btn" onclick="like()"><i class="fa fa-heart"
          style="font-size:30px"></i></button>
      <!--/form-->
    </div>
    <div class="filter-form hidden pop-up">
  <form action="/swipe/filter/{{user._id}}" method="POST">
    <select name="campus" onchange="this.form.submit()" class="select-campus">
      <option value="Barcelona" {{#if (isEqual "Barcelona" inputFilter)}} selected="selected" {{/if}}>Barcelona</option>
      <option value="Amsterdam" {{#if (isEqual "Amsterdam" inputFilter)}} selected="selected" {{/if}}>Amsterdam</option>
      <option value="Madrid" {{#if (isEqual "Madrid" inputFilter)}} selected="selected" {{/if}}>Madrid</option>
      <option value="Miami" {{#if (isEqual "Miami" inputFilter)}} selected="selected" {{/if}}>Miami</option>
      <option value="Berlin" {{#if (isEqual "Berlin" inputFilter)}} selected="selected" {{/if}}>Berlin</option>
      <option value="Paris" {{#if (isEqual "Paris" inputFilter)}} selected="selected" {{/if}}>Paris</option>
      <option value="All" {{#if (isEqual "All" inputFilter)}} selected="selected" {{/if}}>All</option>
    </select>

    <img class="rounded-circle edit-profileInfo-btn close-filter-btn" src="/images/close-window.ico" alt="close form button" onclick="filterShow()">
  </form>
</div>
  </section>



</div>


<nav class="navbar fixed-bottom spacing">
  <ul class="navbar-list">
    <li>
      {{#if inSwipe}}
      <a class="navbar-btn-match"> <img class="swipe-btn" src="/images/colored-tinder-logo.png" alt="swipe icon"> </a>
      {{else}}
      <a class="navbar-btn-match" href="/swipe/show/{{user._id}}"> <img src="/images/colored-tinder-logo.png"
          alt="swipe icon"> </a>
      {{/if}}
    </li>
    <li>
      <a class="navbar-btn" href="/profile/{{user._id}} "> <img src="/images/grey-profile-logo.ico" alt="profile icon">
      </a>
    </li>
    <li>
      <a class="navbar-btn" href="/matches/{{user._id}}"> <img src="/images/grey-matches-logo.ico" alt="matches icon">
      </a>
    </li>
  </ul>
</nav>